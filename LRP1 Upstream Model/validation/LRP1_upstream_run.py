# LRP1_upstream_run.py 
# Automatically generated by Netflux on 01-Jul-2024 

import numpy as np 
from scipy.integrate import ode 
import matplotlib.pyplot as plt 
import LRP1_upstream 
import LRP1_upstream_params
 
[speciesNames, tau, ymax, y0, w, n, EC50] = LRP1_upstream_params.loadParams()
 
# Run single simulation 
tspan = [0, 10] 
t = [] 
dt = tspan[1]/150. 
r = ode(LRP1_upstream.ODEfunc).set_integrator('vode', method='adams', order=10, rtol=0, atol=1e-6, with_jacobian=False) 
r.set_initial_value(y0,tspan[0]).set_f_params(tau,ymax,w,n,EC50) 
results = np.empty([0,len(speciesNames)]) 
while r.successful() and r.t <= tspan[1]: 
	r.integrate(r.t + dt) 
	results = np.append(results,[r.y],axis=0) 
	t.append(r.t) 

fig, ax = plt.subplots() 
ax.plot(t,results) 
ax.set(xlabel='Time',ylabel='Fractional activation') 
ax.legend(speciesNames) 
